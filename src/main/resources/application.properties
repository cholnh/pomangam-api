server.servlet.context-path=/api/v1

server.port=9530
# 키 저장소 경로
server.ssl.key-store=C:/ssl/keystore
# 키 저장소
server.ssl.key-store-password=eun*zzi92!
# alias에 맞는 비번
server.ssl.key-password=eun*zzi92!
server.ssl.key-alias=alias

#server.ssl.trust-store=C:/Program Files/Java/jdk1.8.0_45/bin/cacerts.jks
#server.ssl.trust-store-password=설정했던비밀번호

# tomcat jsession
server.servlet.session.tracking-modes=cookie

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=false

# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 설정
spring.datasource.url=jdbc:mysql://localhost:3306/db_pmg?useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&useSSL=false&validationQuery=select 1&serverTimezone=Asia/Seoul
spring.datasource.username=nakzzi
spring.datasource.password=skrwl486
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# Spring Security 설정
spring.security.basic.enabled=true
#spring.resources.static-locations=classpath:/resources/,classpath:/static/

# Spring jpa 설정
spring.jpa.properties.hibernate.show_sql=false

# Spring data rest 설정
spring.data.rest.base-path=/jpa
spring.data.rest.detection-strategy=default

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads