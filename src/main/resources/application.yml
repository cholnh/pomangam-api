# POMANGAM API APPLICATION PROPERTY

server:
  port: 9530

  servlet:
    context-path: /api/v1
    session:
      tracking-modes: cookie

  ssl:
    # 배포용 key path -> C:/ssl/keystore
    # 개발용 key path -> /Users/nakzzi/Downloads/keystore
    key-store: C:/ssl/keystore
    key-store-password: eun*zzi92!
    key-password: eun*zzi92!
    key-alias: alias

  compression:
    enabled: true
    min-response-size: 2048
---
spring:
  jpa:
    show-sql: true
    generate-ddl: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: true
        format_sql: true
    hibernate:
      ddl-auto: create

  datasource:
    hikari:
      jdbc-url: jdbc:mysql://localhost:3306/db_pmg_v2?useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&useSSL=false&validationQuery=select 1&serverTimezone=Asia/Seoul
      username: nakzzi
      password: skrwl486
      #driver-class-name: mysql.jdbc.Driver
      # maximum-pool-size: 2

  security:
    basic:
      enabled: true

  data:
    rest:
      base-path: /jpa
      detection-strategy: default

  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 215MB

  banner:
    location: banner_v2.txt

  resources:
    chain:
      cache: true
      enabled: true
  cache-period: 3600
---
file:
  # 프로젝트 안 upload-dir: ./uploads
  # 맥 upload-dir: /Users/nakzzi/Downloads/assets
  upload-dir: C:/assets
---
static:
  resource:
    # 맥 location: /Users/nakzzi/Downloads/assets/ -> 확인필요.
    location: file:///C:/assets/
---
logging:
  file: log/slf4j.log
  level:
    org:
      hibernate:
        SQL: debug
        type:
          descriptor:
            sql: trace
---
management:
  health:
    diskspace:
      enabled: false
    status:
      order: DOWN, MAINTENANCE, UNKNOWN, UP
      http-mapping:
        DOWN: 503
        MAINTENANCE: 503
        UNKNOWN: 520
        UP: 200
  endpoints:
    web:
      #cors:
      #  allowed-origins: "http://localhost:8084"
      #  allowed-headers: "Content-Type, Accept, X-Requested-With, remember-me, Authorization"
      #  allowed-methods: "GET, POST, PATCH, PUT, DELETE, OPTIONS"
      #  allow-credentials: true
      #  exposed-headers: "Access-Control-Allow-Origin, Access-Control-Allow-Credentials"
      exposure:
        exclude: env, beans
        #include: "*"